"use strict";(self.webpackChunkstreams_docs=self.webpackChunkstreams_docs||[]).push([[7314],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(a),g=r,m=c["".concat(d,".").concat(g)]||c[g]||u[g]||o;return a?n.createElement(m,l(l({ref:t},p),{},{components:a})):n.createElement(m,l({ref:t},p))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},851:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const o={},l="Javascript Uploader",i={unversionedId:"videos-uploader/javascript-uploader",id:"videos-uploader/javascript-uploader",title:"Javascript Uploader",description:"Introduction",source:"@site/docs/videos-uploader/javascript-uploader.md",sourceDirName:"videos-uploader",slug:"/videos-uploader/javascript-uploader",permalink:"/docs/videos-uploader/javascript-uploader",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"uploaderSidebar",previous:{title:"Embedded Uploader",permalink:"/docs/videos-uploader/embedded-uploader"}},d={},s=[{value:"Introduction",id:"introduction",level:3},{value:"Guide to integrate the uploader",id:"guide-to-integrate-the-uploader",level:2},{value:"Step 1: Get the Authentication Token",id:"step-1-get-the-authentication-token",level:3},{value:"Step 2: Import the TPStreams Uploader SDK",id:"step-2-import-the-tpstreams-uploader-sdk",level:3},{value:"Step 3: Initialize the uploader instance",id:"step-3-initialize-the-uploader-instance",level:3},{value:"Step 4: Select files and start upload",id:"step-4-select-files-and-start-upload",level:3},{value:"Full Example Code",id:"full-example-code",level:3},{value:"Uploader Configuration Options",id:"uploader-configuration-options",level:2},{value:"Uploader Events",id:"uploader-events",level:2},{value:"uploadProgress",id:"uploadprogress",level:3},{value:"uploadProgress",id:"uploadprogress-1",level:3},{value:"uploadError",id:"uploaderror",level:3}],p={toc:s};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"javascript-uploader"},"Javascript Uploader"),(0,r.kt)("h3",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"If you would like to upload videos without using the embedded uploader UI, you can use our javascript SDK that provides methods to upload videos, and track its progress."),(0,r.kt)("h2",{id:"guide-to-integrate-the-uploader"},"Guide to integrate the uploader"),(0,r.kt)("p",null,"This guide will help you integrate the TPStreams video uploader SDK into your website allowing you to upload videos directly to your TPStreams account."),(0,r.kt)("h3",{id:"step-1-get-the-authentication-token"},"Step 1: Get the Authentication Token"),(0,r.kt)("p",null,"Use the API mentioned ",(0,r.kt)("a",{parentName:"p",href:"/docs/server-api/authentication"},"here")," to obtain a user authentication token. This token is required for the uploader to authenticate uploads."),(0,r.kt)("h3",{id:"step-2-import-the-tpstreams-uploader-sdk"},"Step 2: Import the TPStreams Uploader SDK"),(0,r.kt)("p",null,"Include the TPStreams Uploader SDK script in your webpage. Add the following ",(0,r.kt)("inlineCode",{parentName:"p"},"<script>")," tag in the ",(0,r.kt)("inlineCode",{parentName:"p"},"<head>")," or right after the starting ",(0,r.kt)("inlineCode",{parentName:"p"},"<body>")," tag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://static.testpress.in/static/js/tpstreams-uploader.min.js"><\/script>\n')),(0,r.kt)("h3",{id:"step-3-initialize-the-uploader-instance"},"Step 3: Initialize the uploader instance"),(0,r.kt)("p",null,"Make sure to replace the organization id with your own TPStreams organization ID. Click ",(0,r.kt)("a",{parentName:"p",href:"/docs/videos-uploader/javascript-uploader#uploader-configuration-options"},"here")," to know more about the uploader configuration options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<script>\n  const authToken = \'5f34asdd8aec31adfgfc7dee2bc70ab18dbf0a9cf592aghjd9e63c148362cdf595e008bec1\';\n  const orgId = "abcdefg";\n  const uploaderConfig = {\n    generateSubtitle: true,\n    contentProtectionType: "aes"\n  };\n  const uploader = new TpStreamsUploaderSDK(authToken, orgId, uploaderConfig);\n<\/script>\n')),(0,r.kt)("h3",{id:"step-4-select-files-and-start-upload"},"Step 4: Select files and start upload"),(0,r.kt)("p",null,"After you've created a file input on your webpage, you can pass those files to the uploader instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  document.getElementById('uploadButton').addEventListener('click', () => {\n    const fileInput = document.getElementById('fileInput');\n    const file = fileInput.files[0];\n    uploader.selectFiles([file]);\n    uploader.upload();\n  });\n<\/script>\n")),(0,r.kt)("h3",{id:"full-example-code"},"Full Example Code"),(0,r.kt)("p",null,"The following code will display the video upload progress and asset ID on your webpage."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<html>\n  <head>\n    <title>Video Upload with JS SDK</title>\n    <script src="https://static.testpress.in/static/js/tpstreams-uploader.min.js"><\/script>\n  </head>\n  <body>\n    <h1>Upload Video Using TpStreams Uploader SDK</h1>\n    <input type="file" id="fileInput" accept="video/*">\n    <button id="uploadButton">Upload Video</button>\n    <div id="upload_progress"></div>\n    <div id="status"></div>\n    \n    <script>\n      const authToken = \'5ffc7dee2bc70ab18dbf0a9cf592ad9e63c148362cdf595e008bec1\';\n      const orgId = "abcdef";\n      const uploaderConfig = {generateSubtitle: true, contentProtectionType: "aes"};\n      const uploader = new TpStreamsUploaderSDK(authToken, orgId, uploaderConfig);\n\n      uploader.on(\'uploadProgress\', (data) => {\n          document.getElementById("upload_progress").innerHTML = `Progress for asset ${data.asset_id}: ${data.progress_percentage}%`;\n      });\n\n      uploader.on(\'uploadSuccess\', (data) => {\n        console.log(`${data.name}, with asset ID ${data.asset_id} has been uploaded. Transcoding Status: ${data.status}`)\n        document.getElementById(\'status\').innerHTML = "Uploading was successful.";\n      });\n\n      uploader.on(\'uploadError\', (data) => {\n        console.log(`An error occurred while uploading ${data.name}, with asset ID ${data.asset_id}. Transcoding Status: ${data.status}. Error: ${data.error}`)\n        document.getElementById(\'status\').innerHTML = "Uploading has failed";\n      });\n\n      document.getElementById(\'uploadButton\').addEventListener(\'click\', () => {\n        const fileInput = document.getElementById(\'fileInput\');\n        const file = fileInput.files[0];\n\n        if (file) {\n            uploader.selectFiles([file]);\n            uploader.upload();\n        } else {\n            alert(\'Please select a video file to upload.\');\n        }\n      });\n    <\/script>\n  </body>\n</html>\n\n')),(0,r.kt)("h2",{id:"uploader-configuration-options"},"Uploader Configuration Options"),(0,r.kt)("p",null,"You can pass the following configuration options to the uploader while initializing using the ",(0,r.kt)("inlineCode",{parentName:"p"},"uploaderConfig")," argument."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"uploaderConfig")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"generateSubtitle"),(0,r.kt)("td",{parentName:"tr",align:null},"Auto-generate english subtitles for $0.071 per minute of video. False by default."),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"contentProtectionType"),(0,r.kt)("td",{parentName:"tr",align:null},"Choose encryption standard to safeguard your videos. DRM encryption is enabled by default."),(0,r.kt)("td",{parentName:"tr",align:null},'String ("drm", "aes" or "disabled")')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"resolutions"),(0,r.kt)("td",{parentName:"tr",align:null},"Choose the resolutions in which you want to transcode the videos. By default they will be transcoded in all available resolutions."),(0,r.kt)("td",{parentName:"tr",align:null},"List of string ",'["240p", "360p", "480p", "720p"]')))),(0,r.kt)("h2",{id:"uploader-events"},"Uploader Events"),(0,r.kt)("p",null,"You can listen for events in the uploader by attaching a callback using .on()"),(0,r.kt)("h3",{id:"uploadprogress"},"uploadProgress"),(0,r.kt)("p",null,"Listen to this event to track video upload progress."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  uploader.on('uploadProgress', (data) => {\n    document.getElementById(\"upload_progress\").innerHTML = `Progress for asset ${data.asset_id}: ${data.progress_percentage}%`;\n  });\n<\/script>\n")),(0,r.kt)("h3",{id:"uploadprogress-1"},"uploadProgress"),(0,r.kt)("p",null,"This event is fired when a video is successfully uploaded to TpStreams."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  uploader.on('uploadSuccess', (data) => {\n    console.log(`${data.name}, with asset ID ${data.asset_id} has been uploaded. Transcoding Status: ${data.status}`)\n  });\n<\/script>\n")),(0,r.kt)("h3",{id:"uploaderror"},"uploadError"),(0,r.kt)("p",null,"This event is fired when an error occurs while uploading a video to TpStreams."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  uploader.on('uploadError', (data) => {\n    console.log(`An error occurred while uploading ${data.name}, with asset ID ${data.asset_id}. Transcoding Status: ${data.status}. Error: ${data.error}`)\n  });\n<\/script>\n")))}u.isMDXComponent=!0}}]);