"use strict";(self.webpackChunkstreams_docs=self.webpackChunkstreams_docs||[]).push([[7522],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),y=r,m=u["".concat(p,".").concat(y)]||u[y]||d[y]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3177:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4},o="Fairplay Encryption",l={unversionedId:"drm-service/fairplay-encryption",id:"drm-service/fairplay-encryption",title:"Fairplay Encryption",description:"This section provides an introduction to Fairplay Encryption, explaining its purpose as a DRM (Digital Rights Management) technology used to secure content delivery on Apple platforms.",source:"@site/docs/drm-service/fairplay-encryption.md",sourceDirName:"drm-service",slug:"/drm-service/fairplay-encryption",permalink:"/docs/drm-service/fairplay-encryption",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"drmSidebar",previous:{title:"Widevine Encryption",permalink:"/docs/drm-service/widevine-encryption"},next:{title:"Getting license to playback the content",permalink:"/docs/drm-service/get-license"}},p={},s=[{value:"Shaka Packager Command :",id:"shaka-packager-command-",level:2},{value:"Obtain FairPlay Encryption Keys:",id:"obtain-fairplay-encryption-keys",level:2},{value:"Generating Request Body:",id:"generating-request-body",level:2}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fairplay-encryption"},"Fairplay Encryption"),(0,r.kt)("p",null,"This section provides an introduction to Fairplay Encryption, explaining its purpose as a DRM (Digital Rights Management) technology used to secure content delivery on Apple platforms."),(0,r.kt)("h2",{id:"shaka-packager-command-"},"Shaka Packager Command :"),(0,r.kt)("p",null,"To encrypt your content, you can utilize Shaka Packager by running the following command :"),(0,r.kt)("p",null,"To obtain  the FairPlay Encryption Key, IV, and URI, please check this ",(0,r.kt)("a",{parentName:"p",href:"#obtain-fairplay-encryption-keys"},"Fairplay Encrption Keys")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\npackager \\\n  in=https://static.testpress.in/BigBuckBunny.mp4,stream=audio,output=audio.mp4 \\\n  in=https://static.testpress.in/BigBuckBunny.mp4,stream=video,output=h264_360p.mp4 \\\n  --keys "label=:key_id=<content_id>:key=<AES_SIGNING_KEY>:iv=<AES_SIGNING_IV>" \\\n  --protection_scheme cbcs \\\n  --protection_systems Fairplay \\\n  --hls_key_uri <HLS_URI> \\\n  --clear_lead 0 \\\n  --hls_master_playlist_output video.m3u8\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Fields")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier for the content (Should be a random UUID generated you. This UUID will be used for getting licenses for that video.)"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"AES_SIGNING_KEY"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The AES key used for Fairplay encryption"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"AES_SIGNING_IV"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The initialization vector (IV) for Fairplay encryption"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HLS_URI"),(0,r.kt)("td",{parentName:"tr",align:null},"Link"),(0,r.kt)("td",{parentName:"tr",align:null},"URL for encrypted content using FairPlay on Apple devicesendpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,r.kt)("h2",{id:"obtain-fairplay-encryption-keys"},"Obtain FairPlay Encryption Keys:"),(0,r.kt)("p",null,"This API allows users to obtain a FairPlay encryption key. It provides the necessary functionality to acquire the encryption key for ensuring secure content delivery on Apple's platforms."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"POST: https://app.tpstreams.com/api/v1/{{org_code}}/fairplay_key/\n")),(0,r.kt)("p",null,"To obtain the request body please check this ",(0,r.kt)("a",{parentName:"p",href:"#generating-request-body"},"Generating Request Body")),(0,r.kt)("p",null,"sample request body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "request": "eyJjb250ZW50X2lkIjoiY2Y2YzMwZGQ1MGMxNDkyZTgyMzQ0ZWEzZTEzOWRhMWQifQ==",\n  "signature": "NsBcxxchrA7tFw/O86SCM5hwiM6Np/+JnZgjlV0vRyo="\n}\n')),(0,r.kt)("p",null,"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "iv": "f70bce4094fd4612abac60d9809c5b0c",\n  "key": "3ab60de900d64edf9cb25a76f81794e6",\n  "uri": "skd://e5573f8bb8ac47ea839a65beae73263d",\n}\n')),(0,r.kt)("h2",{id:"generating-request-body"},"Generating Request Body:"),(0,r.kt)("p",null,"This step requires your secret key and initialization vector (IV) . you can obtain the signature field by performing the following steps in Python"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import base64\nimport binascii\nimport hashlib\nimport json\n\n\nfrom Cryptodome.Cipher import AES\nfrom Cryptodome.Util.Padding import pad\n\ndef generate_signature(data, key, iv):\n    hash = hashlib.sha1(data.encode()).digest()\n    cipher = AES.new(\n        binascii.unhexlify(key),\n        AES.MODE_CBC,\n        binascii.unhexlify(iv),\n    )\n    padded_hash = pad(hash, AES.block_size, style="pkcs7")\n    signature = cipher.encrypt(padded_hash)\n    return base64.b64encode(signature).decode()\n\nkey = "xxxx"  # AES Signing key\niv = "yyy"  # AES Signing iv\ndata = {\n  "content_id": "cf6c30dd50c1492e82344ea3e139da1d"\n}\ndata = json.dumps(data, separators=(\',\', \':\'))\nsignature = generate_signature(data, key, iv)\nresult = base64.urlsafe_b64encode(data.encode())\n\npost_data = {\n  "request": result,\n  "signature": signature\n}\n')),(0,r.kt)("p",null,"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"{\n    'request': 'eyJjb250ZW50X2lkIjoiY2Y2YzMwZGQ1MGMxNDkyZTgyMzQ0ZWEzZTEzOWRhMWQifQ==', \n     'signature': 'JzwEMcwgf4Tp1b6o5x0HbM08o7PuXA6XnwTmWeHF0g4='\n}\n")))}d.isMDXComponent=!0}}]);