"use strict";(self.webpackChunkstreams_docs=self.webpackChunkstreams_docs||[]).push([[933],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1784:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Trancode a video",s={unversionedId:"transcoding-service/transcode-a-video",id:"transcoding-service/transcode-a-video",title:"Trancode a video",description:"To transcode a video, you need to make a POST request to the following API endpoint:",source:"@site/docs/transcoding-service/transcode-a-video.md",sourceDirName:"transcoding-service",slug:"/transcoding-service/transcode-a-video",permalink:"/docs/transcoding-service/transcode-a-video",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"transcodingSidebar",previous:{title:"Introduction",permalink:"/docs/transcoding-service/transcoding-service-introduction"},next:{title:"Get Transcoding Job detail",permalink:"/docs/transcoding-service/get-transcoding-job-details"}},l={},c=[{value:"Sample payload:",id:"sample-payload",level:4},{value:"Response",id:"response",level:4},{value:"Get notified on status change",id:"get-notified-on-status-change",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"trancode-a-video"},"Trancode a video"),(0,a.kt)("p",null,"To transcode a video, you need to make a POST request to the following API endpoint:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"https://app.tpstreams.com/api/v1/<organization_id>/transcoding_jobs/\n")),(0,a.kt)("p",null,"Replace <organization_id> with your organization's unique identifier."),(0,a.kt)("h4",{id:"sample-payload"},"Sample payload:"),(0,a.kt)("p",null,"You have the flexibility to choose the method that best fits your workflow. Whether you prefer using an external video URL or a direct S3 bucket path, both options are available to you:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1. External Video URL:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "input_url": "https://example.com/input-video.mp4",\n    "output_path": "s3://example-bucket/path/?access_key=<access_key>&secret_key=<secret_key>&region=<region>",\n    "resolutions": ["240p", "480p"]\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2. Direct S3 Bucket Path:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "input_path": "s3://example-bucket/video.mp4/?access_key=<access_key>&secret_key=<secret_key>&region=<region>",\n    "output_path": "s3://example-bucket/path/?access_key=<access_key>&secret_key=<secret_key>&region=<region>",\n    "resolutions": ["240p", "480p"]\n}\n')),(0,a.kt)("p",null,"Here's a breakdown of the fields in the payload:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Name")),(0,a.kt)("th",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"th"},"Description")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"input_url"),(0,a.kt)("td",{parentName:"tr",align:null},"The URL of the input video file you want to transcode. ",(0,a.kt)("strong",{parentName:"td"},"OR")," The S3 bucket path of the input video file. If using the S3 path, ensure the access_key , secret_key and region match the bucket's credentials.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"output_path"),(0,a.kt)("td",{parentName:"tr",align:null},"The S3 bucket path where the transcoded video files will be stored. Ensure a unique path for each transcoding job. The access_key , secret_key and region query parameters should match the bucket's credentials.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"resolutions"),(0,a.kt)("td",{parentName:"tr",align:null},"An array of resolutions for transcoding the video. Specify multiple resolutions as needed. Options include 240p, 360p, 480p, 720p, and 1080p.")))),(0,a.kt)("h4",{id:"response"},"Response"),(0,a.kt)("p",null,"Upon a successful request, you will receive a response like below with information about the transcoding job, including a unique job ID. You can use this job ID to monitor the progress and check the status of your transcoding job."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "5KQfnXCg8Qh",\n    "resolutions": [\n        "240p",\n        "480p"\n        ],\n    "video_duration": null,\n    "status": "Queued",\n    "input_url": "https://example.com/input-video.mp4",\n    "output_path": "s3://example-bucket/path/?access_key=<access_key>&secret_key=<secret_key>&region=<region>",\n    "start_time": null,\n    "end_time": null,\n    "error_message" : null,    \n}\n')),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},'In case of transcoding errors, details will be provided in the "error_message" field of the response.')),(0,a.kt)("h3",{id:"get-notified-on-status-change"},"Get notified on status change"),(0,a.kt)("p",null," We offer webhook integration to keep you informed about the status and progress of your transcoding jobs in real-time. With webhook integration, you can receive notifications as soon as your job status changes, making it easier to track and manage your video transcoding tasks."),(0,a.kt)("p",null,"To register a webhook for your organization, Please check webhook ",(0,a.kt)("a",{parentName:"p",href:"/docs/server-api/webhooks"},"documentation"),"."),(0,a.kt)("p",null,"Upon registering a webhook, you will receive a status change along with information about your transcoding job. Here is an example of the response you might receive:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "5KQfnXCg8Qh",\n    "resolutions": [\n        "240p",\n        "480p"\n    ],\n    "video_duration": null,\n    "status": "transcoding",\n    "input_url": "https://example.com/input-video.mp4",\n    "output_path": "s3://example-bucket/path/?access_key=<access_key>&secret_key=<secret_key>&region=<region>",\n    "start_time": "2023-11-22T12:30:00Z",\n    "end_time": null,\n    "error_message": null\n}\n')))}u.isMDXComponent=!0}}]);