"use strict";(self.webpackChunkstreams_docs=self.webpackChunkstreams_docs||[]).push([[6584],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),u=s(n),g=r,m=u["".concat(l,".").concat(g)]||u[g]||p[g]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:r,o[1]=d;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8586:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:3},o="Getting license to playback the content",d={unversionedId:"drm-service/get-license",id:"drm-service/get-license",title:"Getting license to playback the content",description:"Obtaining a license is essential for enabling playback of DRM-protected content. The process involves acquiring a valid license through the DRM system, granting authorized users access to view the protected media on their devices.",source:"@site/docs/drm-service/get-license.md",sourceDirName:"drm-service",slug:"/drm-service/get-license",permalink:"/docs/drm-service/get-license",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"drmSidebar",previous:{title:"Encrypting the content",permalink:"/docs/drm-service/encrypting"}},l={},s=[{value:"Generating Encoded Data:",id:"generating-encoded-data",level:2},{value:"Generating Content Data:",id:"generating-content-data",level:3},{value:"Generating Signature:",id:"generating-signature",level:3}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-license-to-playback-the-content"},"Getting license to playback the content"),(0,r.kt)("p",null,"Obtaining a license is essential for enabling playback of DRM-protected content. The process involves acquiring a valid license through the DRM system, granting authorized users access to view the protected media on their devices."),(0,r.kt)("p",null,"This API requires ",(0,r.kt)("a",{parentName:"p",href:"/docs/server-api/authentication"},"authentication Header")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"POST: https://app.tpstreams.com/api/v1/<org_code>/drm_license/?data=<encoded_data>/\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Fields")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"org_code"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The organization code for API endpoint"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique identifier for the content (Should be a random UUID generated you. This UUID will be used for getting licenses for that video.)"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"WIDEVINE_AES_KEY"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The AES key used for Widevine encryption"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"WIDEVINE_IV"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"The initialization vector (IV) for Widevine encryption"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"WIDEWINE_AES_KEY , WIDEWINE_IV  and org_code will be provided by us.")),(0,r.kt)("h2",{id:"generating-encoded-data"},"Generating Encoded Data:"),(0,r.kt)("p",null,"To generate encoded data you need to fetch content data and signature"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "content_data": "eyJkb3dubG9hZCI6ZmFsc2UsImRybV90eXBlIjoid2lkZXZpbmUiLCJjb250ZW50X2lkIjoiYTM1NmFhZWYzMGFhNGNkODlmNzY2ZjVmNjUzN2FjMzMifQ==",\n    "signature": "NsBcxxchrA7tFw/O86SCM5hwiM6Np/+JnZgjlV0vRyo="\n}\n')),(0,r.kt)("h3",{id:"generating-content-data"},"Generating Content Data:"),(0,r.kt)("p",null,"You can obtain the request field by performing the following steps in Python:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import json\nimport base64\n\ndata = {\n  "content_id": <content_id>,\n  "download": true/false,\n  "drm_type": "widevine/fairplay"\n}\ndata = json.dumps(data, separators=(\',\', \':\'))\nencoded_content_data = base64.urlsafe_b64encode(data.encode())\n# The result will be eyJjb250ZW50X2lkIjoiY2Y2YzMwZGQ1MGMxNDkyZTgyMzQ0ZWEzZTEzOWRhMWQifQ==\n')),(0,r.kt)("h3",{id:"generating-signature"},"Generating Signature:"),(0,r.kt)("p",null,"You can obtain the signature field by performing the following steps in Python:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import base64\nimport binascii\nimport hashlib\nimport json\n\n\nfrom Cryptodome.Cipher import AES\nfrom Cryptodome.Util.Padding import pad\n\ndef generate_signature(data, key, iv):\n    hash = hashlib.sha1(data.encode()).digest()\n    cipher = AES.new(\n        binascii.unhexlify(key),\n        AES.MODE_CBC,\n        binascii.unhexlify(iv),\n    )\n    padded_hash = pad(hash, AES.block_size, style="pkcs7")\n    signature = cipher.encrypt(padded_hash)\n    return base64.b64encode(signature).decode()\n\nkey = "xxxx"  # AES Signing key\niv = "yyy"  # AES Signing iv\ndata = {\n  "content_id": "cf6c30dd50c1492e82344ea3e139da1d"\n}\ndata = json.dumps(data, separators=(\',\', \':\'))\nsignature = generate_signature(data, key, iv)\n')),(0,r.kt)("p",null,"You can obtain the Encoded data by performing the following steps in Python:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import base64\nimport binascii\nimport hashlib\nimport json\n\n\nfrom Cryptodome.Cipher import AES\nfrom Cryptodome.Util.Padding import pad\n\nkey = "xxxx"  # AES Signing key\niv = "yyy"  # AES Signing iv\norg_code = "xxxx"\n\ncontent_data = {"content_id": "cf6c30dd50c1492e82344ea3e139da1d", "download": "true", "drm_type": "widevine"}\ncontent_data = json.dumps(content_data, separators=(\',\', \':\'))\nencoded_content_data = base64.urlsafe_b64encode(content_data.encode())\nsignature = generate_signature(encoded_content_data)\ndata = {"content_data": encoded_content_data, "signature": signature}\ndata = json.dumps(data, separators=(\',\', \':\'))\nencoded_data = base64.urlsafe_b64encode(data)\n\n\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'LICENSE_URL = f"https://app.tpstreams.com/api/v1/{org_code}/drm_license/?data={encoded_data}"\n')))}p.isMDXComponent=!0}}]);