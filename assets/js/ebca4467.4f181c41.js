"use strict";(self.webpackChunkstreams_docs=self.webpackChunkstreams_docs||[]).push([[3246],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(f,o(o({ref:t},d),{},{components:a})):n.createElement(f,o({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1253:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:1},o="Getting Started",l={unversionedId:"mobile-sdk/react-native-sdk/getting-started",id:"mobile-sdk/react-native-sdk/getting-started",title:"Getting Started",description:"To use our React Native player SDK, add react-native-tpstreams as a dependency in your project.",source:"@site/docs/mobile-sdk/react-native-sdk/getting-started.md",sourceDirName:"mobile-sdk/react-native-sdk",slug:"/mobile-sdk/react-native-sdk/getting-started",permalink:"/docs/mobile-sdk/react-native-sdk/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"mobileSdk",previous:{title:"React Native SDK",permalink:"/docs/category/react-native-sdk"},next:{title:"Player Methods",permalink:"/docs/mobile-sdk/react-native-sdk/player-methods"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Initialize TPStreams",id:"initialize-tpstreams",level:2},{value:"Add the Player Component",id:"add-the-player-component",level:2},{value:"Player Props",id:"player-props",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"To use our React Native player SDK, add ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/react-native-tpstreams"},(0,r.kt)("inlineCode",{parentName:"a"},"react-native-tpstreams"))," as a dependency in your project."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install react-native-tpstreams\n")),(0,r.kt)("h2",{id:"initialize-tpstreams"},"Initialize TPStreams"),(0,r.kt)("p",null,"First, initialize TPStreams with your organization ID. This should be done ",(0,r.kt)("strong",{parentName:"p"},"only once")," at your app's entry point (e.g., App.js or index.js):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { TPStreams } from \"react-native-tpstreams\";\n\nTPStreams.initialize('YOUR_ORGANIZATION_ID');\n")),(0,r.kt)("h2",{id:"add-the-player-component"},"Add the Player Component"),(0,r.kt)("p",null,"Then add the player component to your app:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { TPStreamsPlayerView } from "react-native-tpstreams";\n\n<TPStreamsPlayerView \n  videoId="YOUR_VIDEO_ID"\n  accessToken="YOUR_ACCESS_TOKEN"\n  style={{ width: \'100%\', height: 300 }}\n/>\n')),(0,r.kt)("h2",{id:"player-props"},"Player Props"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"videoId"),": (Required) The ID of the video to play."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accessToken"),": (Required) Access token for the video."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"startAt"),": (Optional) Position in seconds where playback should start. Default is 0."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"shouldAutoPlay"),": (Optional) Whether the video should start playing automatically. Default is true."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"showDefaultCaptions"),": (Optional) Whether to show default captions if available. Default is false."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enableDownload"),": (Optional) Whether to enable download functionality for the video. When set to true, the player will show a download button. Default is false."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"offlineLicenseExpireTime"),": (Optional) The expiration time for offline licenses in seconds. If not provided, defaults to 15 days (1,296,000 seconds)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"downloadMetadata"),": (Optional) Custom metadata to attach to downloads. Accepts an object with string key-value pairs. This metadata is stored with the download and can be retrieved later. Default is undefined.")),(0,r.kt)("p",null,"For a practical implementation and usage of react-native-tpstreams, refer to our ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/testpress/sample_RN_App"},"Sample React Native App"),"."))}c.isMDXComponent=!0}}]);